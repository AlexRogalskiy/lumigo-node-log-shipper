var cov_1ine8a3din=function(){var path="/Users/guymoses/Desktop/dev/source/lumigo-node-log-shipper/src/index.js";var hash="e8c9c56ca3d168cec01c2ca09276d1a1ab6966fa";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/Users/guymoses/Desktop/dev/source/lumigo-node-log-shipper/src/index.js",statementMap:{"0":{start:{line:1,column:15},end:{line:1,column:39}},"1":{start:{line:2,column:12},end:{line:2,column:30}},"2":{start:{line:3,column:0},end:{line:3,column:41}},"3":{start:{line:5,column:20},end:{line:5,column:37}},"4":{start:{line:6,column:22},end:{line:6,column:29}},"5":{start:{line:8,column:31},end:{line:8,column:34}},"6":{start:{line:9,column:32},end:{line:15,column:1}},"7":{start:{line:18,column:1},end:{line:18,column:93}},"8":{start:{line:22,column:1},end:{line:37,column:4}},"9":{start:{line:23,column:16},end:{line:23,column:33}},"10":{start:{line:24,column:15},end:{line:27,column:3}},"11":{start:{line:28,column:2},end:{line:36,column:5}},"12":{start:{line:29,column:4},end:{line:35,column:5}},"13":{start:{line:30,column:4},end:{line:30,column:32}},"14":{start:{line:31,column:4},end:{line:31,column:16}},"15":{start:{line:34,column:4},end:{line:34,column:18}},"16":{start:{line:40,column:0},end:{line:80,column:2}},"17":{start:{line:41,column:24},end:{line:41,column:26}},"18":{start:{line:42,column:24},end:{line:42,column:26}},"19":{start:{line:43,column:23},end:{line:43,column:24}},"20":{start:{line:44,column:18},end:{line:44,column:67}},"21":{start:{line:44,column:39},end:{line:44,column:66}},"22":{start:{line:46,column:1},end:{line:76,column:2}},"23":{start:{line:47,column:14},end:{line:47,column:30}},"24":{start:{line:48,column:19},end:{line:48,column:55}},"25":{start:{line:50,column:2},end:{line:53,column:3}},"26":{start:{line:52,column:3},end:{line:52,column:12}},"27":{start:{line:54,column:2},end:{line:54,column:31}},"28":{start:{line:55,column:2},end:{line:75,column:3}},"29":{start:{line:56,column:27},end:{line:56,column:50}},"30":{start:{line:57,column:3},end:{line:73,column:4}},"31":{start:{line:58,column:19},end:{line:58,column:67}},"32":{start:{line:70,column:4},end:{line:70,column:68}},"33":{start:{line:72,column:4},end:{line:72,column:23}},"34":{start:{line:74,column:3},end:{line:74,column:25}},"35":{start:{line:78,column:1},end:{line:78,column:91}},"36":{start:{line:79,column:1},end:{line:79,column:78}}},fnMap:{"0":{name:"create_kinesis_event",decl:{start:{line:17,column:9},end:{line:17,column:29}},loc:{start:{line:17,column:41},end:{line:19,column:1}},line:17},"1":{name:"put_records",decl:{start:{line:21,column:9},end:{line:21,column:20}},loc:{start:{line:21,column:42},end:{line:38,column:1}},line:21},"2":{name:"(anonymous_2)",decl:{start:{line:22,column:20},end:{line:22,column:21}},loc:{start:{line:22,column:46},end:{line:37,column:2}},line:22},"3":{name:"(anonymous_3)",decl:{start:{line:28,column:29},end:{line:28,column:30}},loc:{start:{line:28,column:49},end:{line:36,column:3}},line:28},"4":{name:"(anonymous_4)",decl:{start:{line:40,column:19},end:{line:40,column:20}},loc:{start:{line:40,column:43},end:{line:80,column:1}},line:40},"5":{name:"(anonymous_5)",decl:{start:{line:44,column:30},end:{line:44,column:31}},loc:{start:{line:44,column:39},end:{line:44,column:66}},line:44}},branchMap:{"0":{loc:{start:{line:29,column:4},end:{line:35,column:5}},type:"if",locations:[{start:{line:29,column:4},end:{line:35,column:5}},{start:{line:29,column:4},end:{line:35,column:5}}],line:29},"1":{loc:{start:{line:50,column:2},end:{line:53,column:3}},type:"if",locations:[{start:{line:50,column:2},end:{line:53,column:3}},{start:{line:50,column:2},end:{line:53,column:3}}],line:50},"2":{loc:{start:{line:55,column:2},end:{line:75,column:3}},type:"if",locations:[{start:{line:55,column:2},end:{line:75,column:3}},{start:{line:55,column:2},end:{line:75,column:3}}],line:55},"3":{loc:{start:{line:55,column:6},end:{line:55,column:83}},type:"binary-expr",locations:[{start:{line:55,column:6},end:{line:55,column:29}},{start:{line:55,column:33},end:{line:55,column:83}}],line:55}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0},b:{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0]},_coverageSchema:"43e27e138ebf9cfc5966b082cf9a028302ed4184",hash:"e8c9c56ca3d168cec01c2ca09276d1a1ab6966fa"};var coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}return coverage[path]=coverageData;}();const Buffer=(cov_1ine8a3din.s[0]++,require("buffer").Buffer);const AWS=(cov_1ine8a3din.s[1]++,require("aws-sdk"));cov_1ine8a3din.s[2]++;AWS.config.update({region:"us-west-2"});const STREAM_NAME=(cov_1ine8a3din.s[3]++,"test-log-stream");const MAX_ITEM_SIZE=(cov_1ine8a3din.s[4]++,1048576);// const ENCODED_64_COST = 4 / 3;
const MAX_KINESIS_BATCH_SIZE=(cov_1ine8a3din.s[5]++,250);const ALLOW_RETRY_ERROR_CODES=(cov_1ine8a3din.s[6]++,["ProvisionedThroughputExceededException","ThrottlingException","ServiceUnavailable","ProvisionedThroughputExceededException","RequestExpired"]);function create_kinesis_event(raw_event){cov_1ine8a3din.f[0]++;cov_1ine8a3din.s[7]++;return{Data:Buffer.from(JSON.stringify(raw_event)).toString("base64"),PartitionKey:"1"};}function put_records(records,streamName){cov_1ine8a3din.f[1]++;cov_1ine8a3din.s[8]++;return new Promise(function(resolve,reject){cov_1ine8a3din.f[2]++;let kinesis=(cov_1ine8a3din.s[9]++,new AWS.Kinesis());let params=(cov_1ine8a3din.s[10]++,{Records:records,StreamName:streamName});cov_1ine8a3din.s[11]++;kinesis.putRecords(params,function(err,data){cov_1ine8a3din.f[3]++;cov_1ine8a3din.s[12]++;if(err){cov_1ine8a3din.b[0][0]++;cov_1ine8a3din.s[13]++;console.log(err,err.stack);cov_1ine8a3din.s[14]++;reject(err);}else{cov_1ine8a3din.b[0][1]++;cov_1ine8a3din.s[15]++;resolve(data);}});});}cov_1ine8a3din.s[16]++;exports.sendLogs=async function(records){cov_1ine8a3din.f[4]++;let response_records=(cov_1ine8a3din.s[17]++,[]);let records_to_write=(cov_1ine8a3din.s[18]++,[]);let retry_items_len=(cov_1ine8a3din.s[19]++,0);let raw_events=(cov_1ine8a3din.s[20]++,records.map(event=>{cov_1ine8a3din.f[5]++;cov_1ine8a3din.s[21]++;return create_kinesis_event(event);}));cov_1ine8a3din.s[22]++;while(raw_events.length>0){let event=(cov_1ine8a3din.s[23]++,raw_events.pop());let event_size=(cov_1ine8a3din.s[24]++,JSON.stringify(event["Data"]).length);cov_1ine8a3din.s[25]++;if(event_size>MAX_ITEM_SIZE){cov_1ine8a3din.b[1][0]++;cov_1ine8a3din.s[26]++;// event is too big
continue;}else{cov_1ine8a3din.b[1][1]++;}cov_1ine8a3din.s[27]++;records_to_write.push(event);cov_1ine8a3din.s[28]++;if((cov_1ine8a3din.b[3][0]++,raw_events.length===0)||(cov_1ine8a3din.b[3][1]++,records_to_write.length===MAX_KINESIS_BATCH_SIZE)){cov_1ine8a3din.b[2][0]++;let number_of_records=(cov_1ine8a3din.s[29]++,records_to_write.length);cov_1ine8a3din.s[30]++;try{let response=(cov_1ine8a3din.s[31]++,await put_records(records_to_write,STREAM_NAME));// todo: the things below
// deal with retries/ bads
// add retry count to `retry_items_len`
// add retires back to raw_events
// log iteration
cov_1ine8a3din.s[32]++;response_records=response_records.concat(response["Records"]);}catch(error){cov_1ine8a3din.s[33]++;console.log(error);}cov_1ine8a3din.s[34]++;records_to_write=[];}else{cov_1ine8a3din.b[2][1]++;}}// log end
cov_1ine8a3din.s[35]++;console.log({"records":response_records.length,"retried_items_count":retry_items_len});cov_1ine8a3din.s[36]++;return{"records":response_records,"retried_items_count":retry_items_len};};